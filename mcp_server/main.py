# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T14:21:42+00:00



import argparse
import json
import os
from typing import *

from autogen.mcp.mcp_proxy import MCPProxy
from autogen.mcp.mcp_proxy.security import BaseSecurity

from models import Anomaly, Height

app = MCPProxy(
    contact={'x-twitter': 'amentumspace'},
    description='The gravitational field of the earth is non-uniform.  The <a href=\'https://en.wikipedia.org/wiki/Geoid\'>geoid</a> is the shape the\n ocean surface would take if only gravity and the rotation of the Earth\n  were considered. The geoid is the surface that defines zero elevation.<br><br>\n\nThe geoid height is the difference between an ideal reference ellipsoid  and the geoid.<br><br>\nThe gravity anomaly is the difference between the acceleration due to gravity on the Earth\'s surface and the value calculated assuming the reference ellipsoid.<br><br>\nThe official Earth Gravitational Model <a href=https://en.wikipedia.org/wiki/Earth_Gravitational_Model#EGM2008/>EGM2008</a> was developed and  released to the public by the National Geospatial-Intelligence Agency (NGA).<br><br>\nOur EGM2008 API provides on-demand access to the EGM2008 model, as implemented by the open-source GeographicLib  <a href=https://geographiclib.sourceforge.io/html/gravity.html>Gravity</a> library.<br><br>\nAPI requests must contain a key "API-Key" in the header (see code samples). Obtain a key from  <a href=\'https://developer.amentum.io\'>here</a>. <br><br> \nAmentum Pty Ltd is not responsible nor liable for any loss or damage of any sort incurred as a result of using the API. <br><br>\nCopyright <a href=\'https://amentum.space\'>Amentum Pty Ltd</a> 2021.\n',
    title='Gravity API',
    version='1.1.1',
    servers=[{'url': ''}],
)


@app.get(
    '/egm2008/geoid_height',
    description=""" for a given latitude / longitude. 
 """,
    tags=['geospatial_analysis'],
)
def app_api_egm2008_endpoints__e_g_m2008_calculate_height(
    latitude: float, longitude: float = ...
):
    """
    Calculate the geoid height

    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.get(
    '/egm2008/gravity_anomaly',
    description=""" for a given latitude / longitude.
 """,
    tags=['geospatial_analysis'],
)
def app_api_egm2008_endpoints__e_g_m2008_calculate_anomaly(
    latitude: float, longitude: float = ...
):
    """
    Calculate gravity anomaly values

    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="MCP Server")
    parser.add_argument(
        "transport",
        choices=["stdio", "sse", "streamable-http"],
        help="Transport mode (stdio, sse or streamable-http)",
    )
    args = parser.parse_args()

    if "CONFIG_PATH" in os.environ:
        config_path = os.environ["CONFIG_PATH"]
        app.load_configuration(config_path)

    if "CONFIG" in os.environ:
        config = os.environ["CONFIG"]
        app.load_configuration_from_string(config)

    if "SECURITY" in os.environ:
        security_params = BaseSecurity.parse_security_parameters_from_env(
            os.environ,
        )

        app.set_security_params(security_params)

    mcp_settings = json.loads(os.environ.get("MCP_SETTINGS", "{}"))

    app.get_mcp(**mcp_settings).run(transport=args.transport)
